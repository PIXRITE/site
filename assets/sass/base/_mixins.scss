// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
    width: 100%;

	&:after {
		clear: both;
	}
}

// Auto Margin
@mixin autoMargins() {
    margin-right: auto;
    margin-left: auto;
}

// Viewport sized typography with minimum and maximum values
//
// @param {Number}   $responsive  - Viewport-based size
// @param {Number}   $min         - Minimum font size (px)
// @param {Number}   $max         - Maximum font size (px) (optional)
// @param {Number}   $fallback    - Fallback for viewport-based units (optional)
//
//  @include responsive-font(5vw, 35px, 150px, 50px);
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  
  @if $fallback {
    font-size: $fallback;
  }
  
  font-size: $responsive;
}


// Link Colors
@mixin link-colors($default: inherit, $hover: inherit, $active: inherit) {
    color: $default;
    
    &:link,
    &:visited {
        color: $default;
    }
    &:active,
    &.active {
        color: $active;
    }
    &:hover {
        color: $hover;
    }
}


// Media Query
@mixin bp($width) {
    @media (max-width: ($width / 16) + em) {
        @content;
    }
}